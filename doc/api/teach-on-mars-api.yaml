openapi: 3.0.0
info:
  title: Teach on Mars API
  version: '1.0'
  description: Teach on Mars webservices for partners.
  contact:
    name: DERUNES
    email: quentin@teachonmars.com
servers:
  - url: 'https://my-userdata.teachonmars.com/api/v3'
paths:
  /verifyIdentityToken:
    post:
      summary: ''
      operationId: post-verifyIdentityToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authToken:
                    $ref: '#/components/schemas/AuthToken'
                required:
                  - authToken
        '404':
          description: "The value of meta.msg indicates the type of error:\n* \"IDENTITY\\_VERIF\\_TOKEN\\_MISSING\": _token_ parameter is missing\n* \"IDENTITY\\_VERIF\\_LEARNERID\\_MISSING\": _learnerId_ param is missing\n* \"IDENTITY\\_VERIF\\_FAILED\": the token verification failed. Either the token is invalid, or is not related to the given learner."
          content:
            application/json:
              schema:
                type: object
      description: "Verify an identity token you've received through a link from the application. This ensures that the link was opened by the right learner."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                learnerId:
                  type: string
                  description: the ID of the learner who claims the identity
                token:
                  type: string
                  description: a token that is generated by the application for a single learner and shall be used to verify the identity of the learner.
        description: |-
          Parameters are passed through the body and include:
          * learnerId: the ID of the learner who claims the identity
          * token: a token that is generated by the application for a single learner and shall be used to verify the identity of the learner.

          In case of successful verification, the service returns an authentication token that can be used to log the learner in the application (or another application / device / webapp).
      tags:
        - Learner
  /learner:
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageSize:
                    type: integer
                    description: 'The configured maximum count of learners in a page (default: 10)'
                  index:
                    type: integer
                    description: The index (in the whole search query) of the first learner of the page. _Indexes_ start at 0.
                  pagecount:
                    type: integer
                    description: The total count of pages available with this search query.
                  page:
                    type: integer
                    description: The number of the page that is returned.
                  count:
                    type: integer
                    description: The total count of learners in the search query.
                  list:
                    type: array
                    description: The list of learners in the given page.
                    items:
                      title: Learner
                      type: object
                      properties:
                        learnerId:
                          type: string
                        login:
                          type: string
                        email:
                          type: string
                        firstname:
                          type: string
                        lastname:
                          type: string
                        lang:
                          type: string
                        status:
                          type: string
                        sandboxTester:
                          type: string
                        title:
                          type: string
                        metadata:
                          title: LearnerMetadata
                          type: object
                          description: This object contains key/value pairs where keys depend on the custom fields configuration in the Mission Center.
                          x-examples:
                            Learner Metadata Example:
                              country: France
                              department: Sales
                      required:
                        - learnerId
                        - login
                required:
                  - list
                  - count
                  - page
                  - pagecount
                  - index
                  - pageSize
      operationId: get-learner
      description: Obtain a paginated list of learners according to the given filters and parameters.
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: ''
      parameters:
        - schema:
            type: integer
            default: 10
            minimum: 1
          in: query
          name: limit
          description: The maximum number of learners in the response.
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
          description: 'The "page" to return.'
        - schema:
            type: string
          in: query
          name: searchQuery
          description: 'Search for learners matching the search query string. Match is tested against firstname, lastname, login and email.'
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: activeOnly
          description: Filter enrolled learners only
      tags:
        - Learner
    post:
      summary: ''
      operationId: post-learner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learner'
        '400':
          description: "The provided data is invalid. Here are the possible errors, depending on the value of meta.msg:\n* \\\"LEARNER\\_PARAM\\_NICKNAME\\_MISSING\\\": No login was provided. Eithier the key is missing from the payload or the value is \\\"\\\".\n* \\\"LEARNER\\_PARAMS\\_INVALID\\\": The provided data is invalid. For instance, the email address may be invalid."
      description: Create a new learner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearnerCreate'
      tags:
        - Learner
  '/learner/{learnerId}':
    parameters:
      - schema:
          type: string
        name: learnerId
        in: path
        required: true
        description: The ID of the learner
    get:
      summary: Your GET endpoint
      tags:
        - Learner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learner'
        '404':
          description: 'Not Found: no learner was foudn with the given learnerId.'
      operationId: get-learner-learnerId
      description: Returns the information of the learner with the given learnerId.
components:
  schemas:
    AuthToken:
      title: AuthToken
      type: string
      description: This token shall be used to authenticate a learner in the application or webapp. It is by default valid for 1 minute.
    Learner:
      title: Learner
      type: object
      properties:
        learnerId:
          type: string
        login:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        lang:
          type: string
        status:
          type: string
        sandboxTester:
          type: string
        title:
          type: string
        metadata:
          $ref: '#/components/schemas/LearnerMetadata'
      required:
        - learnerId
        - login
    LearnerMetadata:
      title: LearnerMetadata
      type: object
      description: This object contains key/value pairs where keys depend on the custom fields configuration in the Mission Center.
      x-examples:
        Learner Metadata Example:
          country: France
          department: Sales
    LearnerCreate:
      title: LearnerCreate
      type: object
      properties:
        login:
          type: string
      required:
        - login
  securitySchemes: {}
tags:
  - name: Learner
    description: Everything about your Learners
